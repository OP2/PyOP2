name: CI

# Trigger the workflow on push or pull request,
# but only for the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CC: mpicc
      PETSC_DIR: ${{ github.workspace }}/petsc
      PETSC_ARCH: default
      PETSC_CONFIGURE_OPTIONS: --with-debugging=1 --with-shared-libraries=1

    steps:
      - name: Install system dependencies
        shell: bash
        run: |
          sudo apt install  \
            build-essential python3-dev git python3-pip libopenmpi-dev  \
            openmpi-bin libblas-dev liblapack-dev gfortran

      - name: Set correct Python version
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - name: Clone PETSc
        uses: actions/checkout@v2
        with:
          repository: firedrakeproject/petsc
          path: ${{ env.PETSC_DIR }}

      - name: Build and install PETSc
        shell: bash
        working-directory: ${{ env.PETSC_DIR }}
        run: |
          ./configure ${PETSC_CONFIGURE_OPTIONS}
          make

      - name: Build and install petsc4py
        shell: bash
        working-directory: ${{ env.PETSC_DIR }}/src/binding/petsc4py
        run: |
          python -m pip install --upgrade cython numpy
          python -m pip install --no-deps .

      - name: Checkout PyOP2
        uses: actions/checkout@v2
        with:
          path: PyOP2
      
      - name: Install PyOP2
        shell: bash
        working-directory: PyOP2
        run: |
          python -m pip install pip==20.2  # pip 20.2 needed for loopy install to work.
          
          # xargs is used to force installation of requirements in the order we specified.
          xargs -l1 python -m pip install < requirements-ext.txt
          xargs -l1 python -m pip install < requirements-git.txt
          python -m pip install --upgrade flake8 pulp sphinx
          python -m pip install .

      - name: Run linting
        shell: bash
        working-directory: PyOP2
        run: make lint

      - name: Run tests
        shell: bash
        working-directory: PyOP2
        run: pytest test -v --tb=native

      - name: Build documentation
        if: ${{ github.event_name == 'push' }}
        shell: bash
        working-directory: PyOP2
        run: make -C doc/sphinx html

      - name: Upload to GitHub Pages
        if: ${{ github.event_name == 'push' }}
        uses: crazy-max/ghaction-github-pages@v2.2.0
        with:
          build_dir: PyOP2/doc/sphinx/build/html
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

